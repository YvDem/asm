{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "pinguin assembly",
	
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#instruction"
		},
		{
			"include": "#label"
		},
		{
			"include": "#operator"
		},
		{
			"include": "#number"
		},
		{
			"include": "#string"
		},
		{
			"include": "#macro"		
		},
		{
			"include": "#variable"
		},
		{
			"include": "#register"
		}
	],

	"repository": {
		"register": {
			"patterns": [
				{
					"match": "\\b(W|w|F|f|STATUS|status|PORTA|porta|PORTB|portb)",
					"captures": {
						"0": {
							"name": "variable.other.register"
						}
					}
				}
			]
		},
		"macro": {
			"patterns": [
				{
					"begin": "([a-zA-Z]\\S*)\\s+(macro)[ \t]+([a-zA-Z]\\S*)",
					"end": "\\b(endm)",
					"beginCaptures": {
						"1": {
							"name": "macro.name"
						},
						"2": {
							"name": "macro.start"
						},
						"3": {
							"name": "variable"
						}
					},
					"endCaptures": {
						"0": {
							"name": "macro.end"
						}
					},
					"patterns": [
						{"include": "#comment"},
						{"include": "#instruction"},
						{"include": "#label"},
						{"include": "#operator"},
						{"include": "#number"},
						{"include": "#string"},
						{"include": "#variable"}
					]
				},
				{
					"begin": "([a-zA-Z]\\S*)\\s+(macro)",
					"end": "\\b(endm)",
					"beginCaptures": {
						"1": {
							"name": "macro.name"
						},
						"2": {
							"name": "macro.start"
						}
					},
					"endCaptures": {
						"0": {
							"name": "macro.end"
						}
					},
					"patterns": [
						{"include": "#comment"},
						{"include": "#instruction"},
						{"include": "#label"},
						{"include": "#operator"},
						{"include": "#number"},
						{"include": "#string"},
						{"include": "#variable"}
					]
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"begin": ";",
					"end": ".*",
					"captures": {
						"0": {
							"name": "comment.line"
						}
					}
				}
			]
		},
		"instruction": {
			"patterns": [
				{
					"match": "\\b(addlw|nop|sleep|addwf|andlw|andwf|bcf|bsf|btfsc|btfss|clrf|clrw|clrwdt|comf|decf|decfsz|incf|incfsz|iorlw|iorwf|movf|movlw|movwf|option|retlw|rlf|rrf|subwf|swapf|tris|xorlw|xorwf|movlb|retfie)\\b",
					"captures": {
						"0": {
							"name": "keyword.control"
						}
					}
				},
				{
					"begin": "\\b(call|goto|return)\\b",
					"end": "\\b\\w+\\b",
					"beginCaptures": {
						"0": {
							"name": "keyword.controlflow"
						}
					},
					"endCaptures": {
						"0": {
							"name": "label"
						}
					}
				}
			]
		},
		"number": {
			"patterns": [
				{
					"match": "\\b((B|b)'?[0-1]+'?)",
					"captures": {
						"0": {
							"name": "constant.numeric.binary"
						}
					}
				},
				{
					"match": "\\b((h|H|0x)'?[0-9a-fA-F]+'?)",
					"captures": {
						"0": {
							"name": "constant.numeric.hex"
						}
					}
				},
				{
					"match": "\\b((D|d)'?[0-9]+'?)",
					"captures": {
						"0": {
							"name": "constant.numeric.decimal"
						}
					}
				},
				{
					"match": "\\b((o|O)'?[0-7]+'?)",
					"captures": {
						"0": {
							"name": "constant.numeric.octal"
						}
					}
				},
				{
					"match": "\\b\\d+\\b",
					"captures": {
						"0": {
							"name": "constant.numeric"
						}
					}
				}
			]
		},
		"label":{
			"patterns": [
				{
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*:)",
					"captures": {
						"0": {
							"name": "label"
						}
					}
				}
			]
		},
		"variable":{
			"patterns": [
				{
					"match": "\\b(randompattern[a-zA-Z_][a-zA-Z0-9_]*)",
					"captures": {
						"0": {
							"name": "variable"
						}
					}
				},
				{
					"begin": "\\b(cblock)\\b",
					"end": "\\b(endc)\\b",
					"beginCaptures": {
						"0": {
							"name": "keyword.control"
						}
					},
					"endCaptures": {
						"0": {
							"name": "keyword.control"
						}
					},
					"patterns": [
						{"include": "#number"},
						{
							"begin": "\\b([a-zA-Z_]+[a-zA-Z0-9_]?)",
							"end": "(:)",
							"beginCaptures": {
								"0": {
									"name": "variable"
								}
							},
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.double_colon"
								}
							}

						}
					]
				}
			]
		}
	},
	"scopeName": "source.asm"
}